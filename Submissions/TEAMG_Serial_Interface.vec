# Test Vector File
<PinDef>
	A7,A8,A9,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11
	#Clock228 ,nReset, Rx, iD0, iD1, iD2, iD3, iD4, iD5, iD6, iP, iLoad
</PinDef>
<TestVector>
	#reset
	000 000000000
	#idle
	C11 XXXXXXXX0
	#start bit
	C10 XXXXXXXX0
	C10 XXXXXXXX0
	C10 XXXXXXXX0
	#character bits
		#iD0
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		#iD1
		C10 XXXXXXXX0
		C10 XXXXXXXX0
		C10 XXXXXXXX0
		#iD2
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		#iD3
		C10 XXXXXXXX0
		C10 XXXXXXXX0
		C10 XXXXXXXX0
		#iD4
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		#iD5
		C10 XXXXXXXX0
		C10 XXXXXXXX0
		C10 XXXXXXXX0
		#iD6
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		C11 XXXXXXXX0
		#iP
		C10 XXXXXXXX0
		C10 XXXXXXXX0
		C10 XXXXXXXX0
	#stop bits
	C11 XXXXXXXX0
	C11 XXXXXXXX0
	C11 XXXXXXXX0
	C11 XXXXXXXX0
	C11 101010101
	C11 101010101
	#end of character
	C11 XXXXXXXX0
	#reset
	000 000000000
	
##############################################################################
##																			##
##	Asynchronous Serial Interface											##
##	----------------------------											##
##																			##
##	These vectors tests the timing of the circuit.							##
##	No clock signals are used and the clock is administered manually with	##
##	1 and 0 bits to allow more accurate analysis to occur and to allow		##
##	more thorough test to be carried out within a clock cycle.				##
##																			##
##	The bit samples should be taken on the second rising edge from the 		##
##	clock. These are indicated in the file by lines of #'s, for example:	##
##																			##
##	#############															##
##	XXX XXXXXXXXX															##
##	XXX XXXXXXXXX															##
##	#############															##
##				 															##
##	For ease of observation, the message that's passed into the circuit		##
##	is a series of alternating its starting with a 1.						##
##																			##
##	Outside of this clock cycle the input data can be anything to test		##
##	that the sample is being taken on the correct edge and is unaffected	##
##	by the values around that edge. Subsequently, these vectors are also	##
##	testing the circuits susceptibility to noise.							##
##																			##
##	At the end, an extra 3 clock cycles are added to test that the iLoad	##
##	signal is asserted for the correct number of clock cycles.				##
##																			##
##############################################################################

	#reset
	000 000000000
	
	#random bits
	011	000000000
	111	000000000
	011	000000000
	111	000000000
	011	000000000
	111	000000000
	011	000000000
	
	#start bit
	010	000000000
	110	000000000
	#############
	010 000000000
	110	000000000
	#############
	010 000000000
	110 000000000
	010 000000000
	
	#iD0
	011 000000000
	111 000000000
	#############
	011 000000000
	111 000000000
	#############
	011 000000000
	111 000000000
	011 000000000
	
	#iD1
	010 000000000
	110 000000000
	#############
	010 000000000
	110 000000000
	#############
	010 000000000
	111 000000000
	011 000000000
	
	#iD2
	011 000000000
	111 000000000
	#############
	011 000000000
	111 000000010
	#############
	010 000000010
	110 000000010
	010 000000010
	
	#iD3
	010 000000010
	110 000000010
	#############
	010 000000010
	110 000000100
	#############
	011 000000100
	111 000000100
	010 000000100
	
	#iD4
	010 000000100
	110 000000100
	#############
	011 000000100
	111 000001010
	#############
	011 000001010
	111 000001010
	011 000001010
	
	#iD5
	011 000001010
	111 000001010
	#############
	010 000001010
	110 000010100
	#############
	011 000010100
	111 000010100
	011 000010100

	#iD6
	010 000010100
	110 000010100
	#############
	011 000010100
	111 000101010
	#############
	010 000101010
	110 000101010
	010 000101010
	
	#iDP
	010 000101010
	110 000101010
	#############
	010 000101010
	110 001010100
	#############
	010 001010100
	110 001010100
	010 001010100
	
	#stop bit 1
	010 001010100
	110 001010100
	#############
	011 001010100
	111 010101010
	#############
	010 010101010
	110 010101010
	011 010101010
	
	#stop bit 2
	011 010101010
	111 010101010
	#############
	011 010101010
	111 101010101
	#############
	011 101010101
	111 101010101
	011 101010101
	
	#random bits
	011 101010101
	111 101010100
	#############
	011 101010100
	111 101010100
	#############
	010 101010100
	110 101010100
	010 101010100
	
	#reset
	000 000000000


	
</TestVector>
